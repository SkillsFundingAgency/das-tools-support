@using SFA.DAS.Tools.Support.Core.Models.EmployerSupport
@using SFA.DAS.Tools.Support.Web.Configuration
@using SFA.DAS.Tools.Support.Web.Models.EmployerSupport
@model SFA.DAS.Tools.Support.Web.Models.EmployerSupport.TeamMemberActionConfirmationViewModel;
@{
    Layout = "_AccountDetailsLayout";

    var resultText = Model.Role switch
    {
        Role.Owner => $"{Model.MemberEmail} can now accept agreements, view information and manage PAYE schemes, organisations, apprentices and team members.",
        Role.Transactor => $"{Model.MemberEmail} can now add apprentices and view information.",
        Role.Viewer => $"{Model.MemberEmail} can now view information but can’t make changes.",
        Role.None => $"{Model.MemberEmail} has minimal access for Employer services.",
        _ => string.Empty
    };
}
@if (Model.Success)
{
    <div class="govuk-notification-banner govuk-notification-banner--success" role="alert" aria-labelledby="govuk-notification-banner-title" data-module="govuk-notification-banner">
        <div class="govuk-notification-banner__header">
            <h2 class="govuk-notification-banner__title" id="govuk-notification-banner-title">
                Success
            </h2>
        </div>
         <div class="govuk-notification-banner__content">
            <h3 class="govuk-notification-banner__heading">
                @(Model.TeamMemberAction == TeamMemberAction.ChangeUserRole ? "Team member updated" : "Invitation sent")
            </h3>
            <p class="govuk-body">
                @(Model.TeamMemberAction == TeamMemberAction.ChangeUserRole
                    ? resultText
                    : $"You've sent an invitation to {Model.MemberEmail}.")
            </p>
            <p class="govuk-body">
                <a href="@Url.Action(RouteNames.Account_Organisations, new { hashedAccountId  = Model.HashedAccountId})" class="govuk-link">Click to return to Team members</a>
            </p>
          
         </div>     
    </div>
}
else
{
    <div class="govuk-error-summary">
        <h1 class="govuk-heading-s govuk-error-message">
            @(Model.TeamMemberAction == TeamMemberAction.ChangeUserRole 
            ? "The team member role update failed." 
            : $"The send invitation request to {Model.MemberEmail} failed.")            
        </h1>
        <p>
            @(Model.TeamMemberAction == TeamMemberAction.ChangeUserRole 
            ? $" {Model.MemberEmail} role remains unchanged."
            : "If you have tried to invite a new user using an existing email address, this will cause a failure.")            
        </p>
        <p>
            <a href="@Url.Action(RouteNames.Account_Organisations, new { hashedAccountId  = Model.HashedAccountId})" class="govuk-link">Click to return to Team members</a>
        </p>
    </div>
}