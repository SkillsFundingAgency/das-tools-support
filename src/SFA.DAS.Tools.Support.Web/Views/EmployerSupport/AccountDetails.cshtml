@model SFA.DAS.Tools.Support.Web.Models.EmployerSupport.AccountDetailsViewModel
@using SFA.DAS.Tools.Support.Web.Models.EmployerSupport;
@using SFA.DAS.Tools.Support.Core.Models.Enums;
@using SFA.DAS.Tools.Support.Web.Configuration;
@{
    ViewData["Title"] = "Account Details";
}
<div class="secondary-header">
    <div class="grid-row">
        <div class="column-full">

            <h5 class="heading-small">
                <a href="/" class="govuk-back-link">
                    Home
                </a>
            </h5>

            <h1 class="govuk-heading-l">
                @(Model?.Account.DasAccountName)
            </h1>
            @if (!string.IsNullOrEmpty(Model?.Account.PublicHashedAccountId))
            {
                <p class="govuk-hint"> Account ID @(Model?.Account.PublicHashedAccountId), created @Model.Account.DateRegistered.ToString("dd/MM/yyyy")</p>
            }
            <p class="govuk-hint">
                Levy Status <strong class="govuk-tag govuk-tag--blue">
                    @Model.Account.ApprenticeshipEmployerType
                </strong>
            </p>

        </div>
    </div>
    <br/>
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-one-third">
            <nav class="sub-nav">
                <ul class="govuk-task-list" role="menu">
                    <li class="govuk-task-list__item govuk-task-list__item--with-link @(Model.SelectedTab == AccountFieldsSelection.EmployerAccount ? "selected" : "")">
                        <a href="@Url.Action(RouteNames.EmployerSupport_AccountDetails, new { hashedAccountId = Model.Account.HashedAccountId, accountFieldsSelection = AccountFieldsSelection.EmployerAccount})" class="govuk-link">Organisations</a>
                    </li>
                    <li class="govuk-task-list__item govuk-task-list__item--with-link @(Model.SelectedTab == AccountFieldsSelection.EmployerAccountFinance ? "selected" : "")">
                        <a href="@Url.Action(RouteNames.EmployerSupport_AccountDetails, new { hashedAccountId  = Model.Account.HashedAccountId, accountFieldsSelection = AccountFieldsSelection.EmployerAccountFinance })" class="govuk-link">Finance</a>
                    </li>
                    <li class="govuk-task-list__item govuk-task-list__item--with-link @(Model.SelectedTab == AccountFieldsSelection.EmployerAccountTeam ? "selected" : "")">
                        <a href="@Url.Action(RouteNames.EmployerSupport_AccountDetails, new { hashedAccountId  = Model.Account.HashedAccountId, accountFieldsSelection =  AccountFieldsSelection.EmployerAccountTeam })" class="govuk-link">Team members</a>
                    </li>
                    <li class="govuk-task-list__item govuk-task-list__item--with-link @(Model.SelectedTab == AccountFieldsSelection.CommitmentSearch ? "selected" : "")">
                        <a href="@Url.Action(RouteNames.EmployerSupport_AccountDetails, new { hashedAccountId  = Model.Account.HashedAccountId, accountFieldsSelection =  AccountFieldsSelection.CommitmentSearch })" class="govuk-link">Commitments</a>
                    </li>
                </ul>
            </nav>
        </div>
        <div class="govuk-grid-column-two-thirds">
            @if (Model.HasFormSubmittedSuccessfully)
            {
                await Html.RenderPartialAsync("_InvitationSentConfirmation", Model.InvitationSentConfirmation);
            }
            else if (Model.IsInvitingTeamMember)
            {
                await Html.RenderPartialAsync("_InviteTeamMember", Model.Invitation);
            }
            else
            {
                @switch (Model.SelectedTab)
                {
                    case AccountFieldsSelection.EmployerAccount:
                        await Html.RenderPartialAsync("_Organisations");
                        break;
                    case AccountFieldsSelection.EmployerAccountFinance:
                        await Html.RenderPartialAsync("_Finance");
                        break;
                    case AccountFieldsSelection.EmployerAccountTeam:
                        await Html.RenderPartialAsync("_TeamMembers");
                        break;
                    case AccountFieldsSelection.CommitmentSearch:
                        await Html.RenderPartialAsync("_Commitments");
                        break;
                    default:
                        <p>Please select a tab to view details.</p>
                        break;
                }
            }           
        </div>
    </div>
</div>